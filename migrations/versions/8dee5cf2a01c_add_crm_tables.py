"""add crm tables

Revision ID: 8dee5cf2a01c
Revises: 259d25e976f9
Create Date: 2024-06-28 13:07:27.004686

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8dee5cf2a01c'
down_revision: Union[str, None] = '259d25e976f9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comercial_group_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Unicode(length=24), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Unicode(length=24), nullable=False),
    sa.Column('name', sa.Unicode(length=100), nullable=False),
    sa.Column('description', sa.Unicode(length=150), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='crm'
    )
    op.create_table('comercial_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Unicode(length=24), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Unicode(length=24), nullable=False),
    sa.Column('name', sa.Unicode(length=100), nullable=False),
    sa.Column('description', sa.Unicode(length=150), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='crm'
    )
    op.create_table('comercial_groups',
    sa.Column('eid', sa.String(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Unicode(length=24), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Unicode(length=24), nullable=False),
    sa.Column('name', sa.Unicode(length=120), nullable=False),
    sa.Column('description', sa.Unicode(length=120), nullable=True),
    sa.Column('comercial_gruops_type_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.Unicode(length=6), nullable=True),
    sa.Column('str_code', sa.Unicode(length=4), nullable=True),
    sa.Column('business_units_eid', sa.Unicode(length=24), nullable=True),
    sa.Column('parent_eid', sa.Unicode(length=24), nullable=False),
    sa.Column('status', sa.Unicode(length=25), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['comercial_gruops_type_id'], ['crm.comercial_group_types.id'], ),
    sa.ForeignKeyConstraint(['parent_eid'], ['crm.comercial_groups.eid'], ),
    sa.ForeignKeyConstraint(['status'], ['crm.comercial_states.name'], ),
    sa.PrimaryKeyConstraint('eid'),
    schema='crm'
    )
    op.create_index(op.f('ix_crm_comercial_groups_parent_eid'), 'comercial_groups', ['parent_eid'], unique=False, schema='crm')
    op.create_table('comercial_specialists',
    sa.Column('eid', sa.String(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Unicode(length=24), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Unicode(length=24), nullable=False),
    sa.Column('user_name', sa.Unicode(length=24), nullable=False),
    sa.Column('comercial_groups_eid', sa.Unicode(length=24), nullable=False),
    sa.Column('status', sa.Unicode(length=25), nullable=True),
    sa.ForeignKeyConstraint(['comercial_groups_eid'], ['crm.comercial_groups.eid'], ),
    sa.ForeignKeyConstraint(['status'], ['crm.comercial_states.name'], ),
    sa.ForeignKeyConstraint(['user_name'], ['usermgr.users.user_name'], ),
    sa.PrimaryKeyConstraint('eid'),
    schema='crm'
    )
    op.create_index(op.f('ix_crm_comercial_specialists_user_name'), 'comercial_specialists', ['user_name'], unique=False, schema='crm')
    op.create_table('publish_departament',
    sa.Column('eid', sa.String(), nullable=False),
    sa.Column('code', sa.Unicode(length=10), nullable=False),
    sa.Column('name', sa.Unicode(length=120), nullable=False),
    sa.Column('comercial_group_eid', sa.Unicode(length=24), nullable=False),
    sa.Column('store_code_legal', sa.Unicode(length=6), nullable=True),
    sa.Column('store_code_natural', sa.Unicode(length=6), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['comercial_group_eid'], ['crm.comercial_groups.eid'], ),
    sa.PrimaryKeyConstraint('eid'),
    schema='publishmgr'
    )
    op.create_index(op.f('ix_publishmgr_publish_departament_comercial_group_eid'), 'publish_departament', ['comercial_group_eid'], unique=False, schema='publishmgr')
    op.create_table('publish_specialists',
    sa.Column('eid', sa.String(), nullable=False),
    sa.Column('user_name', sa.String(length=24), nullable=False),
    sa.Column('code', sa.Unicode(length=10), nullable=True),
    sa.Column('publish_departament_eid', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['publish_departament_eid'], ['publishmgr.publish_departament.eid'], ),
    sa.PrimaryKeyConstraint('eid'),
    sa.UniqueConstraint('user_name'),
    schema='publishmgr'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('publish_specialists', schema='publishmgr')
    op.drop_index(op.f('ix_publishmgr_publish_departament_comercial_group_eid'), table_name='publish_departament', schema='publishmgr')
    op.drop_table('publish_departament', schema='publishmgr')
    op.drop_index(op.f('ix_crm_comercial_specialists_user_name'), table_name='comercial_specialists', schema='crm')
    op.drop_table('comercial_specialists', schema='crm')
    op.drop_index(op.f('ix_crm_comercial_groups_parent_eid'), table_name='comercial_groups', schema='crm')
    op.drop_table('comercial_groups', schema='crm')
    op.drop_table('comercial_states', schema='crm')
    op.drop_table('comercial_group_types', schema='crm')
    # ### end Alembic commands ###
